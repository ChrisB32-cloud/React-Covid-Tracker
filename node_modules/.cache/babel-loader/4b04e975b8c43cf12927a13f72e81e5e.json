{"ast":null,"code":"var _jsxFileName = \"/Users/chrisbrown/Desktop/react-covid-19/React-Covid-Tracker/src/ChartGraph.js\";\n// import React from 'react';\nimport React, { useState, useEffect } from 'react';\nimport { Line } from 'react-chartjs-2'; // Think about putting the object in the return and using hooks\n// to update the particular data we want to update\n\nconst ChartGraph = props => {\n  const dataApi = props.resp; // const [posChartData, setPosDataChart] = useState({});\n\n  const [dataTr, setDataTr] = useState([]); // const posChart = dataApi.filter((t, idx) => {\n  //   if (idx % 20 === 0) {\n  //     const retPos = t.positive;\n  //     return retPos;\n  //   }\n  // });\n\n  let accum = [];\n\n  const awFunc = async () => {\n    dataApi.forEach((pData, idx) => {\n      if (idx % 20 === 0) {\n        accum.push(pData.positive);\n      }\n    });\n  };\n\n  console.log(finData); // setDataTr(accum);\n\n  const chart = () => {// setPosDataChart({\n    //   labels: ['12', '13', '24', '76', '54', '54', '54', '53', '43', '54'],\n    //   // data: {\n    //   datasets: [\n    //     {\n    //       label: 'Positive Cases in Us',\n    //       data: [1, 2, 39, 78, 55, 21],\n    //       // data: accum,\n    //       backgroundColor: ['rgba(34,0,65,0.5)']\n    //     },\n    //     {\n    //       label: 'Positive Cases in France',\n    //       data: [3, 4, 5, 9, 7, 76],\n    //       backgroundColor: ['rgba(34,65,65,0.5)']\n    //     }\n    //   ]\n    // });\n  };\n\n  useEffect(() => {\n    chart();\n  }, []); // console.log(chartHosp);\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, \" testing Charts\"), /*#__PURE__*/React.createElement(Line, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default ChartGraph;","map":{"version":3,"sources":["/Users/chrisbrown/Desktop/react-covid-19/React-Covid-Tracker/src/ChartGraph.js"],"names":["React","useState","useEffect","Line","ChartGraph","props","dataApi","resp","dataTr","setDataTr","accum","awFunc","forEach","pData","idx","push","positive","console","log","finData","chart"],"mappings":";AAAA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,iBAArB,C,CAEA;AACA;;AAEA,MAAMC,UAAU,GAAGC,KAAK,IAAI;AAC1B,QAAMC,OAAO,GAAGD,KAAK,CAACE,IAAtB,CAD0B,CAE1B;;AACA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,EAAD,CAApC,CAH0B,CAK1B;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAIS,KAAK,GAAG,EAAZ;;AACA,QAAMC,MAAM,GAAG,YAAY;AACzBL,IAAAA,OAAO,CAACM,OAAR,CAAgB,CAACC,KAAD,EAAQC,GAAR,KAAgB;AAC9B,UAAIA,GAAG,GAAG,EAAN,KAAa,CAAjB,EAAoB;AAClBJ,QAAAA,KAAK,CAACK,IAAN,CAAWF,KAAK,CAACG,QAAjB;AACD;AACF,KAJD;AAKD,GAND;;AAQAC,EAAAA,OAAO,CAACC,GAAR,CAAYC,OAAZ,EArB0B,CAsB1B;;AAEA,QAAMC,KAAK,GAAG,MAAM,CAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,GAlBD;;AAoBAlB,EAAAA,SAAS,CAAC,MAAM;AACdkB,IAAAA,KAAK;AACN,GAFQ,EAEN,EAFM,CAAT,CA5C0B,CAgD1B;;AAEA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,eAEE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAOD,CAzDD;;AA2DA,eAAehB,UAAf","sourcesContent":["// import React from 'react';\nimport React, { useState, useEffect } from 'react';\nimport { Line } from 'react-chartjs-2';\n\n// Think about putting the object in the return and using hooks\n// to update the particular data we want to update\n\nconst ChartGraph = props => {\n  const dataApi = props.resp;\n  // const [posChartData, setPosDataChart] = useState({});\n  const [dataTr, setDataTr] = useState([]);\n\n  // const posChart = dataApi.filter((t, idx) => {\n  //   if (idx % 20 === 0) {\n  //     const retPos = t.positive;\n  //     return retPos;\n  //   }\n  // });\n\n  let accum = [];\n  const awFunc = async () => {\n    dataApi.forEach((pData, idx) => {\n      if (idx % 20 === 0) {\n        accum.push(pData.positive);\n      }\n    });\n  };\n\n  console.log(finData);\n  // setDataTr(accum);\n\n  const chart = () => {\n    // setPosDataChart({\n    //   labels: ['12', '13', '24', '76', '54', '54', '54', '53', '43', '54'],\n    //   // data: {\n    //   datasets: [\n    //     {\n    //       label: 'Positive Cases in Us',\n    //       data: [1, 2, 39, 78, 55, 21],\n    //       // data: accum,\n    //       backgroundColor: ['rgba(34,0,65,0.5)']\n    //     },\n    //     {\n    //       label: 'Positive Cases in France',\n    //       data: [3, 4, 5, 9, 7, 76],\n    //       backgroundColor: ['rgba(34,65,65,0.5)']\n    //     }\n    //   ]\n    // });\n  };\n\n  useEffect(() => {\n    chart();\n  }, []);\n\n  // console.log(chartHosp);\n\n  return (\n    <div>\n      <h1> testing Charts</h1>\n      <Line />\n      {/* <Line /> */}\n    </div>\n  );\n};\n\nexport default ChartGraph;\n"]},"metadata":{},"sourceType":"module"}