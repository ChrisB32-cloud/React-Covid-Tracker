{"ast":null,"code":"var _jsxFileName = \"/Users/chrisbrown/Desktop/react-covid-19/React-Covid-Tracker/src/ChartGraph.js\";\n// import React from 'react';\nimport React, { useState, useEffect } from 'react';\nimport { Line } from 'react-chartjs-2';\n\nconst ChartGraph = props => {\n  const data = props.resp;\n  const [posChartData, setPosDataChart] = useState({});\n  const [chartPosDatTest, setChartPosDatTest] = useState([]);\n  useEffect(() => {\n    const chart = () => {\n      const posChart = data.filter((t, idx) => {\n        if (idx % 20 === 0) {\n          const retPos = t.positive;\n          return retPos;\n        }\n      });\n      let accum = [];\n      const chTs = data.forEach((t, idx) => {\n        if (idx % 20 === 0) {\n          accum.push(t.positive);\n        }\n      });\n      setChartPosDatTest(accum); // setChartPosDatTest(posChart);\n      // console.log(posChart);\n\n      console.log(accum);\n      setPosDataChart({\n        labels: ['12', '13', '24', '76', '54', '54', '54', '53', '43', '54'],\n        // data: {\n        datasets: [{\n          label: 'Positive Cases in Us',\n          // data: [1, 2, 39, 78, 55, 21],\n          // data: [\n          //   2,\n          //   17,\n          //   470,\n          //   42169,\n          //   533837,\n          //   1108510,\n          //   1582955,\n          //   1997360,\n          //   2627744,\n          //   3813916\n          // ],\n          data: chartPosDatTest,\n          backgroundColor: ['rgba(34,0,65,0.5)']\n        }, {\n          label: 'Positive Cases in France',\n          // data: [3, 4, 5, 9, 7, 76],\n          backgroundColor: ['rgba(34,65,65,0.5)']\n        }] // options: {\n        //   responsive: true,\n        //   scales: {\n        //     yAxes: [\n        //       {\n        //         ticks: {\n        //           max: 4000000,\n        //           min: 0,\n        //           stepSize: 100000\n        //         }\n        //       }\n        //     ]\n        //   }\n        // }\n        // labels: ['12', '13', '24', '76', '54'],\n        // fontColor: 'rgb(166, 171, 179)'\n        // },\n        // options: {\n        //   scales: {\n        //     yAxes: [\n        //       {\n        //         scaleLabel: {\n        //           display: true,\n        //           labelString: 'Y text',\n        //           ticks: {\n        //             max: 4000000,\n        //             min: 0,\n        //             stepSize: 100000\n        //           }\n        //         }\n        //       }\n        //     ]\n        //   }\n        // }\n\n      });\n    };\n\n    chart();\n  }, []); // console.log(chartHosp);\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }\n  }, \" testing Charts\"), /*#__PURE__*/React.createElement(Line, {\n    data: posChartData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default ChartGraph;","map":{"version":3,"sources":["/Users/chrisbrown/Desktop/react-covid-19/React-Covid-Tracker/src/ChartGraph.js"],"names":["React","useState","useEffect","Line","ChartGraph","props","data","resp","posChartData","setPosDataChart","chartPosDatTest","setChartPosDatTest","chart","posChart","filter","t","idx","retPos","positive","accum","chTs","forEach","push","console","log","labels","datasets","label","backgroundColor"],"mappings":";AAAA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,iBAArB;;AAEA,MAAMC,UAAU,GAAGC,KAAK,IAAI;AAC1B,QAAMC,IAAI,GAAGD,KAAK,CAACE,IAAnB;AACA,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCR,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACS,eAAD,EAAkBC,kBAAlB,IAAwCV,QAAQ,CAAC,EAAD,CAAtD;AACAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMU,KAAK,GAAG,MAAM;AAClB,YAAMC,QAAQ,GAAGP,IAAI,CAACQ,MAAL,CAAY,CAACC,CAAD,EAAIC,GAAJ,KAAY;AACvC,YAAIA,GAAG,GAAG,EAAN,KAAa,CAAjB,EAAoB;AAClB,gBAAMC,MAAM,GAAGF,CAAC,CAACG,QAAjB;AACA,iBAAOD,MAAP;AACD;AACF,OALgB,CAAjB;AAOA,UAAIE,KAAK,GAAG,EAAZ;AACA,YAAMC,IAAI,GAAGd,IAAI,CAACe,OAAL,CAAa,CAACN,CAAD,EAAIC,GAAJ,KAAY;AACpC,YAAIA,GAAG,GAAG,EAAN,KAAa,CAAjB,EAAoB;AAClBG,UAAAA,KAAK,CAACG,IAAN,CAAWP,CAAC,CAACG,QAAb;AACD;AACF,OAJY,CAAb;AAKAP,MAAAA,kBAAkB,CAACQ,KAAD,CAAlB,CAdkB,CAelB;AACA;;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ;AAEAV,MAAAA,eAAe,CAAC;AACdgB,QAAAA,MAAM,EAAE,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB,IAAzB,EAA+B,IAA/B,EAAqC,IAArC,EAA2C,IAA3C,EAAiD,IAAjD,EAAuD,IAAvD,CADM;AAEd;AACAC,QAAAA,QAAQ,EAAE,CACR;AACEC,UAAAA,KAAK,EAAE,sBADT;AAEE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACArB,UAAAA,IAAI,EAAEI,eAfR;AAgBEkB,UAAAA,eAAe,EAAE,CAAC,mBAAD;AAhBnB,SADQ,EAmBR;AACED,UAAAA,KAAK,EAAE,0BADT;AAEE;AACAC,UAAAA,eAAe,EAAE,CAAC,oBAAD;AAHnB,SAnBQ,CAHI,CA4Bd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AA7Dc,OAAD,CAAf;AA+DD,KAlFD;;AAoFAhB,IAAAA,KAAK;AACN,GAtFQ,EAsFN,EAtFM,CAAT,CAJ0B,CA4F1B;;AAEA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,eAEE,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAEJ,YAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAMD,CApGD;;AAsGA,eAAeJ,UAAf","sourcesContent":["// import React from 'react';\nimport React, { useState, useEffect } from 'react';\nimport { Line } from 'react-chartjs-2';\n\nconst ChartGraph = props => {\n  const data = props.resp;\n  const [posChartData, setPosDataChart] = useState({});\n  const [chartPosDatTest, setChartPosDatTest] = useState([]);\n  useEffect(() => {\n    const chart = () => {\n      const posChart = data.filter((t, idx) => {\n        if (idx % 20 === 0) {\n          const retPos = t.positive;\n          return retPos;\n        }\n      });\n\n      let accum = [];\n      const chTs = data.forEach((t, idx) => {\n        if (idx % 20 === 0) {\n          accum.push(t.positive);\n        }\n      });\n      setChartPosDatTest(accum);\n      // setChartPosDatTest(posChart);\n      // console.log(posChart);\n      console.log(accum);\n\n      setPosDataChart({\n        labels: ['12', '13', '24', '76', '54', '54', '54', '53', '43', '54'],\n        // data: {\n        datasets: [\n          {\n            label: 'Positive Cases in Us',\n            // data: [1, 2, 39, 78, 55, 21],\n            // data: [\n            //   2,\n            //   17,\n            //   470,\n            //   42169,\n            //   533837,\n            //   1108510,\n            //   1582955,\n            //   1997360,\n            //   2627744,\n            //   3813916\n            // ],\n            data: chartPosDatTest,\n            backgroundColor: ['rgba(34,0,65,0.5)']\n          },\n          {\n            label: 'Positive Cases in France',\n            // data: [3, 4, 5, 9, 7, 76],\n            backgroundColor: ['rgba(34,65,65,0.5)']\n          }\n        ]\n        // options: {\n        //   responsive: true,\n        //   scales: {\n        //     yAxes: [\n        //       {\n        //         ticks: {\n        //           max: 4000000,\n        //           min: 0,\n        //           stepSize: 100000\n        //         }\n        //       }\n        //     ]\n        //   }\n        // }\n        // labels: ['12', '13', '24', '76', '54'],\n        // fontColor: 'rgb(166, 171, 179)'\n        // },\n        // options: {\n        //   scales: {\n        //     yAxes: [\n        //       {\n        //         scaleLabel: {\n        //           display: true,\n        //           labelString: 'Y text',\n        //           ticks: {\n        //             max: 4000000,\n        //             min: 0,\n        //             stepSize: 100000\n        //           }\n        //         }\n        //       }\n        //     ]\n        //   }\n        // }\n      });\n    };\n\n    chart();\n  }, []);\n\n  // console.log(chartHosp);\n\n  return (\n    <div>\n      <h1> testing Charts</h1>\n      <Line data={posChartData} />\n    </div>\n  );\n};\n\nexport default ChartGraph;\n"]},"metadata":{},"sourceType":"module"}