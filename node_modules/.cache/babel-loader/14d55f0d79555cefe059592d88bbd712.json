{"ast":null,"code":"var _jsxFileName = \"/Users/chrisbrown/Desktop/react-covid-19/React-Covid-Tracker/src/StatePop.js\";\n// import React from 'react';\nimport React, { useState } from 'react';\nimport PopulateField from './PopulateField';\n\nconst StatePop = props => {\n  const [covid, setCovid] = useState([]);\n  const loopStates = props.results; // Need to try using asycn to avoid using state again\n\n  const LoopTest = () => {\n    console.log('hello');\n    return loopStates.map(st => /*#__PURE__*/React.createElement(\"option\", {\n      value: st.state,\n      key: st.state,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 7\n      }\n    }, st.state));\n  };\n\n  function GrabSt(e) {\n    e.preventDefault();\n    const stTarget = e.target.value; // console.log(e.target);\n    // e.target.sel\n\n    loopStates.map(state => {\n      if (stTarget === state.state) {\n        setCovid(state);\n      }\n    });\n  } // function setDisplayedValue(aState) {\n  //   this.value = aState;\n  // }\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"state-dropdown\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"select\", {\n    onChange: e => GrabSt(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(LoopTest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(PopulateField, {\n    feilds: covid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default StatePop;","map":{"version":3,"sources":["/Users/chrisbrown/Desktop/react-covid-19/React-Covid-Tracker/src/StatePop.js"],"names":["React","useState","PopulateField","StatePop","props","covid","setCovid","loopStates","results","LoopTest","console","log","map","st","state","GrabSt","e","preventDefault","stTarget","target","value"],"mappings":";AAAA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;AAEA,MAAMC,QAAQ,GAAGC,KAAK,IAAI;AACxB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAMM,UAAU,GAAGH,KAAK,CAACI,OAAzB,CAFwB,CAIxB;;AAEA,QAAMC,QAAQ,GAAG,MAAM;AACrBC,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACA,WAAOJ,UAAU,CAACK,GAAX,CAAeC,EAAE,iBACtB;AAAQ,MAAA,KAAK,EAAEA,EAAE,CAACC,KAAlB;AAAyB,MAAA,GAAG,EAAED,EAAE,CAACC,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGD,EAAE,CAACC,KADN,CADK,CAAP;AAKD,GAPD;;AASA,WAASC,MAAT,CAAgBC,CAAhB,EAAmB;AACjBA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMC,QAAQ,GAAGF,CAAC,CAACG,MAAF,CAASC,KAA1B,CAFiB,CAGjB;AACA;;AACAb,IAAAA,UAAU,CAACK,GAAX,CAAeE,KAAK,IAAI;AACtB,UAAII,QAAQ,KAAKJ,KAAK,CAACA,KAAvB,EAA8B;AAC5BR,QAAAA,QAAQ,CAACQ,KAAD,CAAR;AACD;AACF,KAJD;AAKD,GAzBuB,CA2BxB;AACA;AACA;;;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,QAAQ,EAAEE,CAAC,IAAID,MAAM,CAACC,CAAD,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAIE,oBAAC,aAAD;AAAe,IAAA,MAAM,EAAEX,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CADF;AAQD,CAvCD;;AAyCA,eAAeF,QAAf","sourcesContent":["// import React from 'react';\nimport React, { useState } from 'react';\nimport PopulateField from './PopulateField';\n\nconst StatePop = props => {\n  const [covid, setCovid] = useState([]);\n  const loopStates = props.results;\n\n  // Need to try using asycn to avoid using state again\n\n  const LoopTest = () => {\n    console.log('hello');\n    return loopStates.map(st => (\n      <option value={st.state} key={st.state}>\n        {st.state}\n      </option>\n    ));\n  };\n\n  function GrabSt(e) {\n    e.preventDefault();\n    const stTarget = e.target.value;\n    // console.log(e.target);\n    // e.target.sel\n    loopStates.map(state => {\n      if (stTarget === state.state) {\n        setCovid(state);\n      }\n    });\n  }\n\n  // function setDisplayedValue(aState) {\n  //   this.value = aState;\n  // }\n\n  return (\n    <div className=\"state-dropdown\">\n      <select onChange={e => GrabSt(e)}>\n        <LoopTest />\n      </select>\n      <PopulateField feilds={covid} />\n    </div>\n  );\n};\n\nexport default StatePop;\n"]},"metadata":{},"sourceType":"module"}