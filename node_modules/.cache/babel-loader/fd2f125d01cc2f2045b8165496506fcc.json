{"ast":null,"code":"var _jsxFileName = \"/Users/chrisbrown/Desktop/react-covid-19/React-Covid-Tracker/src/ChartGraph.js\";\n// import React from 'react';\nimport React from 'react';\nimport './ChartGraph.css';\nimport { configChart, formatDates, increaceRateFormula } from './helper';\nimport { lineGraph } from './graphHelper';\nimport { Line } from 'react-chartjs-2'; // import { Line } from 'react-chartjs';\n// Think about putting the object in the return and using hooks\n// to update the particular data we want to update\n\nconst ChartGraph = props => {\n  const dataApi = props.resp; // console.log(dataApi);\n\n  const filterValue = {\n    positive: 'positive',\n    positiveIncrease: 'positiveIncrease',\n    negative: 'negative',\n    recovered: 'recovered',\n    hospitalized: 'hospitalized',\n    hospitalizedCurrently: 'hospitalizedCurrently',\n    date: 'date',\n    death: 'death',\n    deathIncrease: 'deathIncrease',\n    inIcuCumulative: 'inIcuCumulative',\n    inIcuCurrently: 'inIcuCurrently'\n  };\n  const testHelper = configChart(dataApi, filterValue.positive);\n  const chartDates = configChart(dataApi, filterValue.date);\n  const dthChart = configChart(dataApi, filterValue.death);\n  const datesFormt = formatDates(chartDates); // const recoveredData = configChart(dataApi, filterValue.recovered);\n  // console.log(dthChart);\n  // console.log(testHelper);\n\n  const increaseFormula = increaceRateFormula(dataApi, filterValue.positive, filterValue.death, filterValue.recovered); // console.log(dthChart);\n  // console.log(increaseFormula);\n\n  const positiveChartData = lineGraph(datesFormt, 'Positive Cases in Us', testHelper, 'rgba(255, 99, 132, 0.5)');\n  const mortalityChartData = lineGraph(datesFormt, 'Mortality in US', dthChart, 'rgba(54, 162, 235, 0.5)');\n  const increaseChartData = lineGraph(datesFormt, 'New per Day in Us', increaseFormula, 'rgba(255, 206, 86, 0.5)');\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"charts-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"posChart\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Line, {\n    data: positiveChartData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, \"Source: The COVID Tracking Project\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dthChart\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Line, {\n    data: mortalityChartData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, \"Source: The COVID Tracking Project\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"incChart\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Line, {\n    data: increaseChartData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, \"Source: The COVID Tracking Project\")));\n};\n\nexport default ChartGraph;","map":{"version":3,"sources":["/Users/chrisbrown/Desktop/react-covid-19/React-Covid-Tracker/src/ChartGraph.js"],"names":["React","configChart","formatDates","increaceRateFormula","lineGraph","Line","ChartGraph","props","dataApi","resp","filterValue","positive","positiveIncrease","negative","recovered","hospitalized","hospitalizedCurrently","date","death","deathIncrease","inIcuCumulative","inIcuCurrently","testHelper","chartDates","dthChart","datesFormt","increaseFormula","positiveChartData","mortalityChartData","increaseChartData"],"mappings":";AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,kBAAP;AACA,SAASC,WAAT,EAAsBC,WAAtB,EAAmCC,mBAAnC,QAA8D,UAA9D;AACA,SAASC,SAAT,QAA0B,eAA1B;AACA,SAASC,IAAT,QAAqB,iBAArB,C,CACA;AAEA;AACA;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAC5B,QAAMC,OAAO,GAAGD,KAAK,CAACE,IAAtB,CAD4B,CAE5B;;AAEA,QAAMC,WAAW,GAAG;AAClBC,IAAAA,QAAQ,EAAE,UADQ;AAElBC,IAAAA,gBAAgB,EAAE,kBAFA;AAGlBC,IAAAA,QAAQ,EAAE,UAHQ;AAIlBC,IAAAA,SAAS,EAAE,WAJO;AAKlBC,IAAAA,YAAY,EAAE,cALI;AAMlBC,IAAAA,qBAAqB,EAAE,uBANL;AAOlBC,IAAAA,IAAI,EAAE,MAPY;AAQlBC,IAAAA,KAAK,EAAE,OARW;AASlBC,IAAAA,aAAa,EAAE,eATG;AAUlBC,IAAAA,eAAe,EAAE,iBAVC;AAWlBC,IAAAA,cAAc,EAAE;AAXE,GAApB;AAcA,QAAMC,UAAU,GAAGrB,WAAW,CAACO,OAAD,EAAUE,WAAW,CAACC,QAAtB,CAA9B;AACA,QAAMY,UAAU,GAAGtB,WAAW,CAACO,OAAD,EAAUE,WAAW,CAACO,IAAtB,CAA9B;AACA,QAAMO,QAAQ,GAAGvB,WAAW,CAACO,OAAD,EAAUE,WAAW,CAACQ,KAAtB,CAA5B;AACA,QAAMO,UAAU,GAAGvB,WAAW,CAACqB,UAAD,CAA9B,CArB4B,CAsB5B;AAEA;AACA;;AAEA,QAAMG,eAAe,GAAGvB,mBAAmB,CACzCK,OADyC,EAEzCE,WAAW,CAACC,QAF6B,EAGzCD,WAAW,CAACQ,KAH6B,EAIzCR,WAAW,CAACI,SAJ6B,CAA3C,CA3B4B,CAiC5B;AACA;;AAEA,QAAMa,iBAAiB,GAAGvB,SAAS,CACjCqB,UADiC,EAEjC,sBAFiC,EAGjCH,UAHiC,EAIjC,yBAJiC,CAAnC;AAOA,QAAMM,kBAAkB,GAAGxB,SAAS,CAClCqB,UADkC,EAElC,iBAFkC,EAGlCD,QAHkC,EAIlC,yBAJkC,CAApC;AAOA,QAAMK,iBAAiB,GAAGzB,SAAS,CACjCqB,UADiC,EAEjC,mBAFiC,EAGjCC,eAHiC,EAIjC,yBAJiC,CAAnC;AAOA,sBACE;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAEC,iBAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CAFF,CADF,eAKE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAEC,kBAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CAFF,CALF,eASE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAEC,iBAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CAFF,CATF,CADF;AAgBD,CAzED;;AA2EA,eAAevB,UAAf","sourcesContent":["// import React from 'react';\nimport React from 'react';\nimport './ChartGraph.css';\nimport { configChart, formatDates, increaceRateFormula } from './helper';\nimport { lineGraph } from './graphHelper';\nimport { Line } from 'react-chartjs-2';\n// import { Line } from 'react-chartjs';\n\n// Think about putting the object in the return and using hooks\n// to update the particular data we want to update\n\nconst ChartGraph = (props) => {\n  const dataApi = props.resp;\n  // console.log(dataApi);\n\n  const filterValue = {\n    positive: 'positive',\n    positiveIncrease: 'positiveIncrease',\n    negative: 'negative',\n    recovered: 'recovered',\n    hospitalized: 'hospitalized',\n    hospitalizedCurrently: 'hospitalizedCurrently',\n    date: 'date',\n    death: 'death',\n    deathIncrease: 'deathIncrease',\n    inIcuCumulative: 'inIcuCumulative',\n    inIcuCurrently: 'inIcuCurrently',\n  };\n\n  const testHelper = configChart(dataApi, filterValue.positive);\n  const chartDates = configChart(dataApi, filterValue.date);\n  const dthChart = configChart(dataApi, filterValue.death);\n  const datesFormt = formatDates(chartDates);\n  // const recoveredData = configChart(dataApi, filterValue.recovered);\n\n  // console.log(dthChart);\n  // console.log(testHelper);\n\n  const increaseFormula = increaceRateFormula(\n    dataApi,\n    filterValue.positive,\n    filterValue.death,\n    filterValue.recovered\n  );\n  // console.log(dthChart);\n  // console.log(increaseFormula);\n\n  const positiveChartData = lineGraph(\n    datesFormt,\n    'Positive Cases in Us',\n    testHelper,\n    'rgba(255, 99, 132, 0.5)'\n  );\n\n  const mortalityChartData = lineGraph(\n    datesFormt,\n    'Mortality in US',\n    dthChart,\n    'rgba(54, 162, 235, 0.5)'\n  );\n\n  const increaseChartData = lineGraph(\n    datesFormt,\n    'New per Day in Us',\n    increaseFormula,\n    'rgba(255, 206, 86, 0.5)'\n  );\n\n  return (\n    <div className=\"charts-container\">\n      <div className=\"posChart\">\n        <Line data={positiveChartData} />\n        <h3>Source: The COVID Tracking Project</h3>\n      </div>\n      <div className=\"dthChart\">\n        <Line data={mortalityChartData} />\n        <h3>Source: The COVID Tracking Project</h3>\n      </div>\n      <div className=\"incChart\">\n        <Line data={increaseChartData} />\n        <h3>Source: The COVID Tracking Project</h3>\n      </div>\n    </div>\n  );\n};\n\nexport default ChartGraph;\n"]},"metadata":{},"sourceType":"module"}