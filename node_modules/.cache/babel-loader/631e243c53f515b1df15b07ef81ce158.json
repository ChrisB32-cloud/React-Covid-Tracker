{"ast":null,"code":"var _jsxFileName = \"/Users/chrisbrown/Desktop/react-covid-19/React-Covid-Tracker/src/ChartGraph.js\";\n// import React from 'react';\nimport React, { useState, useEffect } from 'react';\nimport { Line } from 'react-chartjs-2'; // Think about putting the object in the return and using hooks\n// to update the particular data we want to update\n\nconst ChartGraph = props => {\n  const dataApi = props.resp; // const [posChartData, setPosDataChart] = useState({});\n\n  const [dataTr, setDataTr] = useState({}); // const randomValues = [34, 45, 56, 6, 7845, 234];\n\n  setDataTr({\n    data: randomValues\n  });\n  const posChart = dataApi.filter((t, idx) => {\n    if (idx % 20 === 0) {\n      const retPos = t.positive;\n      return retPos;\n    }\n  });\n  const mapChart = posChart.map(t => {\n    return t.positive;\n  }); // console.log(chartHosp);\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, \" testing Charts\"), /*#__PURE__*/React.createElement(Line, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default ChartGraph;","map":{"version":3,"sources":["/Users/chrisbrown/Desktop/react-covid-19/React-Covid-Tracker/src/ChartGraph.js"],"names":["React","useState","useEffect","Line","ChartGraph","props","dataApi","resp","dataTr","setDataTr","data","randomValues","posChart","filter","t","idx","retPos","positive","mapChart","map"],"mappings":";AAAA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,iBAArB,C,CAEA;AACA;;AAEA,MAAMC,UAAU,GAAGC,KAAK,IAAI;AAC1B,QAAMC,OAAO,GAAGD,KAAK,CAACE,IAAtB,CAD0B,CAE1B;;AACA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,EAAD,CAApC,CAH0B,CAK1B;;AAEAQ,EAAAA,SAAS,CAAC;AAAEC,IAAAA,IAAI,EAAEC;AAAR,GAAD,CAAT;AAEA,QAAMC,QAAQ,GAAGN,OAAO,CAACO,MAAR,CAAe,CAACC,CAAD,EAAIC,GAAJ,KAAY;AAC1C,QAAIA,GAAG,GAAG,EAAN,KAAa,CAAjB,EAAoB;AAClB,YAAMC,MAAM,GAAGF,CAAC,CAACG,QAAjB;AACA,aAAOD,MAAP;AACD;AACF,GALgB,CAAjB;AAOA,QAAME,QAAQ,GAAGN,QAAQ,CAACO,GAAT,CAAaL,CAAC,IAAI;AACjC,WAAOA,CAAC,CAACG,QAAT;AACD,GAFgB,CAAjB,CAhB0B,CAoB1B;;AAEA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,eAEE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAOD,CA7BD;;AA+BA,eAAeb,UAAf","sourcesContent":["// import React from 'react';\nimport React, { useState, useEffect } from 'react';\nimport { Line } from 'react-chartjs-2';\n\n// Think about putting the object in the return and using hooks\n// to update the particular data we want to update\n\nconst ChartGraph = props => {\n  const dataApi = props.resp;\n  // const [posChartData, setPosDataChart] = useState({});\n  const [dataTr, setDataTr] = useState({});\n\n  // const randomValues = [34, 45, 56, 6, 7845, 234];\n\n  setDataTr({ data: randomValues });\n\n  const posChart = dataApi.filter((t, idx) => {\n    if (idx % 20 === 0) {\n      const retPos = t.positive;\n      return retPos;\n    }\n  });\n\n  const mapChart = posChart.map(t => {\n    return t.positive;\n  });\n\n  // console.log(chartHosp);\n\n  return (\n    <div>\n      <h1> testing Charts</h1>\n      <Line />\n      {/* <Line /> */}\n    </div>\n  );\n};\n\nexport default ChartGraph;\n"]},"metadata":{},"sourceType":"module"}