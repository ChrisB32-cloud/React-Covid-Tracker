{"ast":null,"code":"function configChart(data, passApi) {\n  // console.log(data);\n  const testData = data.filter((item, idx) => {\n    if (idx % 1 === 0) {\n      if (item[passApi] === null) {\n        return item[passApi] = 1;\n      }\n\n      return item[passApi];\n    }\n  }).map(filt => {\n    // return filt.positive;\n    return filt[passApi];\n  });\n  return testData;\n}\n\nfunction formatDates(formatArr) {\n  const dates = formatArr.map(d => {\n    const fix = d.toString().slice(4, 8);\n    const newFix = fix.slice(0, 2) + '-' + fix.slice(2);\n    return newFix;\n  });\n  return dates;\n}\n\nexport { configChart, formatDates };","map":{"version":3,"sources":["/Users/chrisbrown/Desktop/react-covid-19/React-Covid-Tracker/src/helper.js"],"names":["configChart","data","passApi","testData","filter","item","idx","map","filt","formatDates","formatArr","dates","d","fix","toString","slice","newFix"],"mappings":"AAAA,SAASA,WAAT,CAAqBC,IAArB,EAA2BC,OAA3B,EAAoC;AAClC;AACA,QAAMC,QAAQ,GAAGF,IAAI,CAClBG,MADc,CACP,CAACC,IAAD,EAAOC,GAAP,KAAe;AACrB,QAAIA,GAAG,GAAG,CAAN,KAAY,CAAhB,EAAmB;AACjB,UAAID,IAAI,CAACH,OAAD,CAAJ,KAAkB,IAAtB,EAA4B;AAC1B,eAAQG,IAAI,CAACH,OAAD,CAAJ,GAAgB,CAAxB;AACD;;AACD,aAAOG,IAAI,CAACH,OAAD,CAAX;AACD;AACF,GARc,EASdK,GATc,CASVC,IAAI,IAAI;AACX;AACA,WAAOA,IAAI,CAACN,OAAD,CAAX;AACD,GAZc,CAAjB;AAaA,SAAOC,QAAP;AACD;;AAED,SAASM,WAAT,CAAqBC,SAArB,EAAgC;AAC9B,QAAMC,KAAK,GAAGD,SAAS,CAACH,GAAV,CAAcK,CAAC,IAAI;AAC/B,UAAMC,GAAG,GAAGD,CAAC,CAACE,QAAF,GAAaC,KAAb,CAAmB,CAAnB,EAAsB,CAAtB,CAAZ;AACA,UAAMC,MAAM,GAAGH,GAAG,CAACE,KAAJ,CAAU,CAAV,EAAa,CAAb,IAAkB,GAAlB,GAAwBF,GAAG,CAACE,KAAJ,CAAU,CAAV,CAAvC;AACA,WAAOC,MAAP;AACD,GAJa,CAAd;AAKA,SAAOL,KAAP;AACD;;AAED,SAASX,WAAT,EAAsBS,WAAtB","sourcesContent":["function configChart(data, passApi) {\n  // console.log(data);\n  const testData = data\n    .filter((item, idx) => {\n      if (idx % 1 === 0) {\n        if (item[passApi] === null) {\n          return (item[passApi] = 1);\n        }\n        return item[passApi];\n      }\n    })\n    .map(filt => {\n      // return filt.positive;\n      return filt[passApi];\n    });\n  return testData;\n}\n\nfunction formatDates(formatArr) {\n  const dates = formatArr.map(d => {\n    const fix = d.toString().slice(4, 8);\n    const newFix = fix.slice(0, 2) + '-' + fix.slice(2);\n    return newFix;\n  });\n  return dates;\n}\n\nexport { configChart, formatDates };\n"]},"metadata":{},"sourceType":"module"}