{"ast":null,"code":"var _jsxFileName = \"/Users/chrisbrown/Desktop/react-covid-19/React-Covid-Tracker/src/ChartGraph.js\";\n// import React from 'react';\nimport React, { useState, useEffect } from 'react';\nimport { Line } from 'react-chartjs-2'; // Think about putting the object in the return and using hooks\n// to update the particular data we want to update\n\nconst ChartGraph = props => {\n  const dataApi = props.resp; // const [posChartData, setPosDataChart] = useState({});\n\n  const [dataTr, setDataTr] = useState([]);\n  const posChart = dataApi.filter((t, idx) => {\n    if (idx % 20 === 0) {\n      const retPos = t.positive;\n      return retPos;\n    }\n  });\n  const mapChart = posChart.map(t => {\n    return t.positive;\n  }); // setDataTr(mapChart);\n  // console.log(dataTr);\n\n  console.log(mapChart); // let someT = [];\n  // const awFunc = async () => {\n  //   let accum = [];\n  //   dataApi.forEach((pData, idx) => {\n  //     if (idx % 20 === 0) {\n  //       accum.push(pData.positive);\n  //     }\n  //   });\n  //   someT.push(accum);\n  // };\n  // console.log(someT);\n  // // setDataTr(accum);\n  // awFunc();\n\n  const chart = () => {// setPosDataChart({\n    //   labels: ['12', '13', '24', '76', '54', '54', '54', '53', '43', '54'],\n    //   // data: {\n    //   datasets: [\n    //     {\n    //       label: 'Positive Cases in Us',\n    //       data: [1, 2, 39, 78, 55, 21],\n    //       // data: accum,\n    //       backgroundColor: ['rgba(34,0,65,0.5)']\n    //     },\n    //     {\n    //       label: 'Positive Cases in France',\n    //       data: [3, 4, 5, 9, 7, 76],\n    //       backgroundColor: ['rgba(34,65,65,0.5)']\n    //     }\n    //   ]\n    // });\n  };\n\n  useEffect(() => {\n    chart();\n  }, []); // console.log(chartHosp);\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, \" testing Charts\"), /*#__PURE__*/React.createElement(Line, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default ChartGraph;","map":{"version":3,"sources":["/Users/chrisbrown/Desktop/react-covid-19/React-Covid-Tracker/src/ChartGraph.js"],"names":["React","useState","useEffect","Line","ChartGraph","props","dataApi","resp","dataTr","setDataTr","posChart","filter","t","idx","retPos","positive","mapChart","map","console","log","chart"],"mappings":";AAAA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,iBAArB,C,CAEA;AACA;;AAEA,MAAMC,UAAU,GAAGC,KAAK,IAAI;AAC1B,QAAMC,OAAO,GAAGD,KAAK,CAACE,IAAtB,CAD0B,CAE1B;;AACA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,EAAD,CAApC;AAEA,QAAMS,QAAQ,GAAGJ,OAAO,CAACK,MAAR,CAAe,CAACC,CAAD,EAAIC,GAAJ,KAAY;AAC1C,QAAIA,GAAG,GAAG,EAAN,KAAa,CAAjB,EAAoB;AAClB,YAAMC,MAAM,GAAGF,CAAC,CAACG,QAAjB;AACA,aAAOD,MAAP;AACD;AACF,GALgB,CAAjB;AAOA,QAAME,QAAQ,GAAGN,QAAQ,CAACO,GAAT,CAAaL,CAAC,IAAI;AACjC,WAAOA,CAAC,CAACG,QAAT;AACD,GAFgB,CAAjB,CAZ0B,CAgB1B;AACA;;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ,EAlB0B,CAoB1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AAEA,QAAMI,KAAK,GAAG,MAAM,CAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,GAlBD;;AAoBAlB,EAAAA,SAAS,CAAC,MAAM;AACdkB,IAAAA,KAAK;AACN,GAFQ,EAEN,EAFM,CAAT,CAvD0B,CA2D1B;;AAEA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,eAEE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAOD,CApED;;AAsEA,eAAehB,UAAf","sourcesContent":["// import React from 'react';\nimport React, { useState, useEffect } from 'react';\nimport { Line } from 'react-chartjs-2';\n\n// Think about putting the object in the return and using hooks\n// to update the particular data we want to update\n\nconst ChartGraph = props => {\n  const dataApi = props.resp;\n  // const [posChartData, setPosDataChart] = useState({});\n  const [dataTr, setDataTr] = useState([]);\n\n  const posChart = dataApi.filter((t, idx) => {\n    if (idx % 20 === 0) {\n      const retPos = t.positive;\n      return retPos;\n    }\n  });\n\n  const mapChart = posChart.map(t => {\n    return t.positive;\n  });\n\n  // setDataTr(mapChart);\n  // console.log(dataTr);\n  console.log(mapChart);\n\n  // let someT = [];\n  // const awFunc = async () => {\n  //   let accum = [];\n  //   dataApi.forEach((pData, idx) => {\n  //     if (idx % 20 === 0) {\n  //       accum.push(pData.positive);\n  //     }\n  //   });\n  //   someT.push(accum);\n  // };\n\n  // console.log(someT);\n  // // setDataTr(accum);\n  // awFunc();\n\n  const chart = () => {\n    // setPosDataChart({\n    //   labels: ['12', '13', '24', '76', '54', '54', '54', '53', '43', '54'],\n    //   // data: {\n    //   datasets: [\n    //     {\n    //       label: 'Positive Cases in Us',\n    //       data: [1, 2, 39, 78, 55, 21],\n    //       // data: accum,\n    //       backgroundColor: ['rgba(34,0,65,0.5)']\n    //     },\n    //     {\n    //       label: 'Positive Cases in France',\n    //       data: [3, 4, 5, 9, 7, 76],\n    //       backgroundColor: ['rgba(34,65,65,0.5)']\n    //     }\n    //   ]\n    // });\n  };\n\n  useEffect(() => {\n    chart();\n  }, []);\n\n  // console.log(chartHosp);\n\n  return (\n    <div>\n      <h1> testing Charts</h1>\n      <Line />\n      {/* <Line /> */}\n    </div>\n  );\n};\n\nexport default ChartGraph;\n"]},"metadata":{},"sourceType":"module"}