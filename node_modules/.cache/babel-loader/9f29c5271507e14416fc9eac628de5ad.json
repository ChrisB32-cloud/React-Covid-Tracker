{"ast":null,"code":"var _jsxFileName = \"/Users/chrisbrown/Desktop/react-covid-19/React-Covid-Tracker/src/ChartGraph.js\";\n// import React from 'react';\nimport React from 'react';\nimport './ChartGraph.css';\nimport { configChart, configChartDates } from './helper';\nimport { Line } from 'react-chartjs-2'; // Think about putting the object in the return and using hooks\n// to update the particular data we want to update\n\nconst ChartGraph = props => {\n  const dataApi = props.resp; // let _su = ['positive'];\n\n  const filterValue = {\n    positive: 'positive',\n    negative: 'negative',\n    date: 'date',\n    death: 'death'\n  };\n  const testHelper = configChart(dataApi, filterValue.positive);\n  const chartDates = configChart(dataApi, filterValue.date);\n  const dthChart = configChart(dataApi, filterValue.death);\n  const chartData = {\n    labels: chartDates,\n    datasets: [{\n      label: 'Positive Cases in Us',\n      // data: posChartData,\n      data: testHelper,\n      backgroundColor: ['rgba(255, 99, 132, 0.6)', 'rgba(54, 162, 235, 0.6)', 'rgba(255, 206, 86, 0.6)', 'rgba(75, 192, 192, 0.6)'],\n      borderWidth: 3\n    }]\n  };\n  const mortData = {\n    labels: chartDates,\n    datasets: [{\n      label: 'Mortality in Us',\n      data: dthChart,\n      beginAtZero: true,\n      min: 0,\n      backgroundColor: [// 'rgba(255, 99, 132, 0.6)',\n      'rgba(54, 162, 235, 0.6)', 'rgba(255, 206, 86, 0.6)', 'rgba(75, 192, 192, 0.6)'],\n      borderWidth: 3\n    }],\n    options: {\n      scales: {\n        xAxes: [{\n          ticks: {\n            // try with 0 value and uncomment min\n            beginAtZero: true,\n            min: 0\n          }\n        }]\n      }\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"charts-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Line, {\n    data: chartData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Line, {\n    data: mortData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default ChartGraph;","map":{"version":3,"sources":["/Users/chrisbrown/Desktop/react-covid-19/React-Covid-Tracker/src/ChartGraph.js"],"names":["React","configChart","configChartDates","Line","ChartGraph","props","dataApi","resp","filterValue","positive","negative","date","death","testHelper","chartDates","dthChart","chartData","labels","datasets","label","data","backgroundColor","borderWidth","mortData","beginAtZero","min","options","scales","xAxes","ticks"],"mappings":";AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,kBAAP;AACA,SAASC,WAAT,EAAsBC,gBAAtB,QAA8C,UAA9C;AACA,SAASC,IAAT,QAAqB,iBAArB,C,CAEA;AACA;;AAEA,MAAMC,UAAU,GAAGC,KAAK,IAAI;AAC1B,QAAMC,OAAO,GAAGD,KAAK,CAACE,IAAtB,CAD0B,CAG1B;;AACA,QAAMC,WAAW,GAAG;AAClBC,IAAAA,QAAQ,EAAE,UADQ;AAElBC,IAAAA,QAAQ,EAAE,UAFQ;AAGlBC,IAAAA,IAAI,EAAE,MAHY;AAIlBC,IAAAA,KAAK,EAAE;AAJW,GAApB;AAOA,QAAMC,UAAU,GAAGZ,WAAW,CAACK,OAAD,EAAUE,WAAW,CAACC,QAAtB,CAA9B;AACA,QAAMK,UAAU,GAAGb,WAAW,CAACK,OAAD,EAAUE,WAAW,CAACG,IAAtB,CAA9B;AACA,QAAMI,QAAQ,GAAGd,WAAW,CAACK,OAAD,EAAUE,WAAW,CAACI,KAAtB,CAA5B;AAEA,QAAMI,SAAS,GAAG;AAChBC,IAAAA,MAAM,EAAEH,UADQ;AAEhBI,IAAAA,QAAQ,EAAE,CACR;AACEC,MAAAA,KAAK,EAAE,sBADT;AAEE;AACAC,MAAAA,IAAI,EAAEP,UAHR;AAIEQ,MAAAA,eAAe,EAAE,CACf,yBADe,EAEf,yBAFe,EAGf,yBAHe,EAIf,yBAJe,CAJnB;AAUEC,MAAAA,WAAW,EAAE;AAVf,KADQ;AAFM,GAAlB;AAkBA,QAAMC,QAAQ,GAAG;AACfN,IAAAA,MAAM,EAAEH,UADO;AAEfI,IAAAA,QAAQ,EAAE,CACR;AACEC,MAAAA,KAAK,EAAE,iBADT;AAEEC,MAAAA,IAAI,EAAEL,QAFR;AAGES,MAAAA,WAAW,EAAE,IAHf;AAIEC,MAAAA,GAAG,EAAE,CAJP;AAKEJ,MAAAA,eAAe,EAAE,CACf;AACA,+BAFe,EAGf,yBAHe,EAIf,yBAJe,CALnB;AAWEC,MAAAA,WAAW,EAAE;AAXf,KADQ,CAFK;AAiBfI,IAAAA,OAAO,EAAE;AACPC,MAAAA,MAAM,EAAE;AACNC,QAAAA,KAAK,EAAE,CACL;AACEC,UAAAA,KAAK,EAAE;AACL;AACAL,YAAAA,WAAW,EAAE,IAFR;AAGLC,YAAAA,GAAG,EAAE;AAHA;AADT,SADK;AADD;AADD;AAjBM,GAAjB;AAgCA,sBACE;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAET,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAEO,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAOD,CAxED;;AA0EA,eAAenB,UAAf","sourcesContent":["// import React from 'react';\nimport React from 'react';\nimport './ChartGraph.css';\nimport { configChart, configChartDates } from './helper';\nimport { Line } from 'react-chartjs-2';\n\n// Think about putting the object in the return and using hooks\n// to update the particular data we want to update\n\nconst ChartGraph = props => {\n  const dataApi = props.resp;\n\n  // let _su = ['positive'];\n  const filterValue = {\n    positive: 'positive',\n    negative: 'negative',\n    date: 'date',\n    death: 'death'\n  };\n\n  const testHelper = configChart(dataApi, filterValue.positive);\n  const chartDates = configChart(dataApi, filterValue.date);\n  const dthChart = configChart(dataApi, filterValue.death);\n\n  const chartData = {\n    labels: chartDates,\n    datasets: [\n      {\n        label: 'Positive Cases in Us',\n        // data: posChartData,\n        data: testHelper,\n        backgroundColor: [\n          'rgba(255, 99, 132, 0.6)',\n          'rgba(54, 162, 235, 0.6)',\n          'rgba(255, 206, 86, 0.6)',\n          'rgba(75, 192, 192, 0.6)'\n        ],\n        borderWidth: 3\n      }\n    ]\n  };\n\n  const mortData = {\n    labels: chartDates,\n    datasets: [\n      {\n        label: 'Mortality in Us',\n        data: dthChart,\n        beginAtZero: true,\n        min: 0,\n        backgroundColor: [\n          // 'rgba(255, 99, 132, 0.6)',\n          'rgba(54, 162, 235, 0.6)',\n          'rgba(255, 206, 86, 0.6)',\n          'rgba(75, 192, 192, 0.6)'\n        ],\n        borderWidth: 3\n      }\n    ],\n    options: {\n      scales: {\n        xAxes: [\n          {\n            ticks: {\n              // try with 0 value and uncomment min\n              beginAtZero: true,\n              min: 0\n            }\n          }\n        ]\n      }\n    }\n  };\n\n  return (\n    <div className=\"charts-container\">\n      <Line data={chartData} />\n      <Line data={mortData} />\n      {/* <Line /> */}\n    </div>\n  );\n};\n\nexport default ChartGraph;\n"]},"metadata":{},"sourceType":"module"}