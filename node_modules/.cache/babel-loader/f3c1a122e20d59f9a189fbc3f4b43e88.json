{"ast":null,"code":"var _jsxFileName = \"/Users/chrisbrown/Desktop/react-covid-19/React-Covid-Tracker/src/ChartGraph.js\";\n// import React from 'react';\nimport React from 'react';\nimport './ChartGraph.css';\nimport { configChart, formatDates, increaceRateFormula } from './helper';\nimport { lineGraph } from './graphHelper';\nimport { Line } from 'react-chartjs-2'; // import { Line } from 'react-chartjs';\n// Think about putting the object in the return and using hooks\n// to update the particular data we want to update\n\nconst ChartGraph = props => {\n  const dataApi = props.resp; // console.log(dataApi);\n\n  const filterValue = {\n    positive: 'positive',\n    positiveIncrease: 'positiveIncrease',\n    negative: 'negative',\n    recovered: 'recovered',\n    hospitalized: 'hospitalized',\n    hospitalizedCurrently: 'hospitalizedCurrently',\n    date: 'date',\n    death: 'death',\n    deathIncrease: 'deathIncrease',\n    inIcuCumulative: 'inIcuCumulative',\n    inIcuCurrently: 'inIcuCurrently'\n  };\n  const positiveTot = configChart(dataApi, filterValue.positive);\n  const positiveChange = configChart(dataApi, filterValue.positiveIncrease);\n  const hospitalizedTot = configChart(dataApi, filterValue.hospitalized);\n  const hospitalizedCurr = configChart(dataApi, filterValue.hospitalizedCurrently);\n  const chartDates = configChart(dataApi, filterValue.date);\n  const dthChart = configChart(dataApi, filterValue.death);\n  const dthChange = configChart(dataApi, filterValue.deathIncrease);\n  const icuTot = configChart(dataApi, filterValue.inIcuCumulative);\n  const icuCurr = configChart(dataApi, filterValue.inIcuCurrently);\n  const datesFormt = formatDates(chartDates); // const recoveredData = configChart(dataApi, filterValue.recovered);\n  // console.log(dthChart);\n  // console.log(positiveTot);\n\n  const increaseFormula = increaceRateFormula(dataApi, filterValue.positive, filterValue.death, filterValue.recovered); // console.log(dthChart);\n  // console.log(increaseFormula);\n\n  const positiveChartData = lineGraph(datesFormt, 'Positive Cases in Us', positiveTot, 'rgba(255, 99, 132, 0.5)');\n  const positiveChangeChartData = lineGraph(datesFormt, 'Positive Cases in Us', positiveChange, 'rgba(200, 200, 132, 0.5)');\n  const mortalityChartData = lineGraph(datesFormt, 'Mortality in US', dthChart, 'rgba(54, 162, 235, 0.5)');\n  const mortalityChangeChartData = lineGraph(datesFormt, 'Daily Mortality in US', dthChange, 'rgba(54, 162, 200, 0.5)');\n  const increaseChartData = lineGraph(datesFormt, 'New Cases per Day in Us', increaseFormula, 'rgba(255, 206, 86, 0.5)');\n  const hospChartData = lineGraph(datesFormt, 'New Cases per Day in Us', hospitalizedTot, 'rgba(255, 180, 100, 0.5)');\n  const hospChangeChartData = lineGraph(datesFormt, 'New Cases per Day in Us', hospitalizedCurr, 'rgba(200, 206, 86, 0.5)');\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"charts-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"posChart\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Line, {\n    data: positiveChartData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  }, \"Source: The COVID Tracking Project\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dthChart\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Line, {\n    data: mortalityChartData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  }, \"Source: The COVID Tracking Project\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"incChart\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Line, {\n    data: increaseChartData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }, \"Source: The COVID Tracking Project\")));\n};\n\nexport default ChartGraph;","map":{"version":3,"sources":["/Users/chrisbrown/Desktop/react-covid-19/React-Covid-Tracker/src/ChartGraph.js"],"names":["React","configChart","formatDates","increaceRateFormula","lineGraph","Line","ChartGraph","props","dataApi","resp","filterValue","positive","positiveIncrease","negative","recovered","hospitalized","hospitalizedCurrently","date","death","deathIncrease","inIcuCumulative","inIcuCurrently","positiveTot","positiveChange","hospitalizedTot","hospitalizedCurr","chartDates","dthChart","dthChange","icuTot","icuCurr","datesFormt","increaseFormula","positiveChartData","positiveChangeChartData","mortalityChartData","mortalityChangeChartData","increaseChartData","hospChartData","hospChangeChartData"],"mappings":"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","sourcesContent":["// import React from 'react';\nimport React from 'react';\nimport './ChartGraph.css';\nimport { configChart, formatDates, increaceRateFormula } from './helper';\nimport { lineGraph } from './graphHelper';\nimport { Line } from 'react-chartjs-2';\n// import { Line } from 'react-chartjs';\n\n// Think about putting the object in the return and using hooks\n// to update the particular data we want to update\n\nconst ChartGraph = (props) => {\n  const dataApi = props.resp;\n  // console.log(dataApi);\n\n  const filterValue = {\n    positive: 'positive',\n    positiveIncrease: 'positiveIncrease',\n    negative: 'negative',\n    recovered: 'recovered',\n    hospitalized: 'hospitalized',\n    hospitalizedCurrently: 'hospitalizedCurrently',\n    date: 'date',\n    death: 'death',\n    deathIncrease: 'deathIncrease',\n    inIcuCumulative: 'inIcuCumulative',\n    inIcuCurrently: 'inIcuCurrently',\n  };\n\n  const positiveTot = configChart(dataApi, filterValue.positive);\n  const positiveChange = configChart(dataApi, filterValue.positiveIncrease);\n  const hospitalizedTot = configChart(dataApi, filterValue.hospitalized);\n  const hospitalizedCurr = configChart(\n    dataApi,\n    filterValue.hospitalizedCurrently\n  );\n  const chartDates = configChart(dataApi, filterValue.date);\n  const dthChart = configChart(dataApi, filterValue.death);\n  const dthChange = configChart(dataApi, filterValue.deathIncrease);\n  const icuTot = configChart(dataApi, filterValue.inIcuCumulative);\n  const icuCurr = configChart(dataApi, filterValue.inIcuCurrently);\n  const datesFormt = formatDates(chartDates);\n  // const recoveredData = configChart(dataApi, filterValue.recovered);\n\n  // console.log(dthChart);\n  // console.log(positiveTot);\n\n  const increaseFormula = increaceRateFormula(\n    dataApi,\n    filterValue.positive,\n    filterValue.death,\n    filterValue.recovered\n  );\n  // console.log(dthChart);\n  // console.log(increaseFormula);\n\n  const positiveChartData = lineGraph(\n    datesFormt,\n    'Positive Cases in Us',\n    positiveTot,\n    'rgba(255, 99, 132, 0.5)'\n  );\n  const positiveChangeChartData = lineGraph(\n    datesFormt,\n    'Positive Cases in Us',\n    positiveChange,\n    'rgba(200, 200, 132, 0.5)'\n  );\n\n  const mortalityChartData = lineGraph(\n    datesFormt,\n    'Mortality in US',\n    dthChart,\n    'rgba(54, 162, 235, 0.5)'\n  );\n  const mortalityChangeChartData = lineGraph(\n    datesFormt,\n    'Daily Mortality in US',\n    dthChange,\n    'rgba(54, 162, 200, 0.5)'\n  );\n\n  const increaseChartData = lineGraph(\n    datesFormt,\n    'New Cases per Day in Us',\n    increaseFormula,\n    'rgba(255, 206, 86, 0.5)'\n  );\n  const hospChartData = lineGraph(\n    datesFormt,\n    'New Cases per Day in Us',\n    hospitalizedTot,\n    'rgba(255, 180, 100, 0.5)'\n  );\n  const hospChangeChartData = lineGraph(\n    datesFormt,\n    'New Cases per Day in Us',\n    hospitalizedCurr,\n    'rgba(200, 206, 86, 0.5)'\n  );\n\n  return (\n    <div className=\"charts-container\">\n      <div className=\"posChart\">\n        <Line data={positiveChartData} />\n        <h3>Source: The COVID Tracking Project</h3>\n      </div>\n      <div className=\"dthChart\">\n        <Line data={mortalityChartData} />\n        <h3>Source: The COVID Tracking Project</h3>\n      </div>\n      <div className=\"incChart\">\n        <Line data={increaseChartData} />\n        <h3>Source: The COVID Tracking Project</h3>\n      </div>\n    </div>\n  );\n};\n\nexport default ChartGraph;\n"]},"metadata":{},"sourceType":"module"}