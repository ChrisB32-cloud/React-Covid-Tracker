{"ast":null,"code":"var _jsxFileName = \"/Users/chrisbrown/Desktop/react-covid-19/React-Covid-Tracker/src/ChartGraph.js\";\n// import React from 'react';\nimport React from 'react';\nimport './ChartGraph.css';\nimport { Line } from 'react-chartjs-2'; // Think about putting the object in the return and using hooks\n// to update the particular data we want to update\n\nconst ChartGraph = props => {\n  const dataApi = props.resp; // console.log(dataApi);\n\n  const posChartFilter = dataApi.filter((pst, idx) => {\n    if (idx % 5 === 0) {\n      return pst.positive;\n    }\n  });\n  const posChartData = posChartFilter.map(filt => {\n    return filt.positive;\n  });\n  const posChartFiltDates = dataApi.filter((pst, idx) => {\n    if (idx % 5 === 0) {\n      return pst.date;\n    }\n  });\n  const posDates = posChartFiltDates.map(filt => {\n    return filt.date;\n  });\n  const chartData = {\n    labels: posDates,\n    datasets: [{\n      label: 'Positive Cases in Us',\n      data: posChartData,\n      backgroundColor: ['rgba(255, 99, 132, 0.6)', 'rgba(54, 162, 235, 0.6)', 'rgba(255, 206, 86, 0.6)', 'rgba(75, 192, 192, 0.6)'],\n      borderWidth: 3\n    }]\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"charts-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Line, {\n    data: chartData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default ChartGraph;","map":{"version":3,"sources":["/Users/chrisbrown/Desktop/react-covid-19/React-Covid-Tracker/src/ChartGraph.js"],"names":["React","Line","ChartGraph","props","dataApi","resp","posChartFilter","filter","pst","idx","positive","posChartData","map","filt","posChartFiltDates","date","posDates","chartData","labels","datasets","label","data","backgroundColor","borderWidth"],"mappings":";AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,kBAAP;AACA,SAASC,IAAT,QAAqB,iBAArB,C,CAEA;AACA;;AAEA,MAAMC,UAAU,GAAGC,KAAK,IAAI;AAC1B,QAAMC,OAAO,GAAGD,KAAK,CAACE,IAAtB,CAD0B,CAG1B;;AAEA,QAAMC,cAAc,GAAGF,OAAO,CAACG,MAAR,CAAe,CAACC,GAAD,EAAMC,GAAN,KAAc;AAClD,QAAIA,GAAG,GAAG,CAAN,KAAY,CAAhB,EAAmB;AACjB,aAAOD,GAAG,CAACE,QAAX;AACD;AACF,GAJsB,CAAvB;AAMA,QAAMC,YAAY,GAAGL,cAAc,CAACM,GAAf,CAAmBC,IAAI,IAAI;AAC9C,WAAOA,IAAI,CAACH,QAAZ;AACD,GAFoB,CAArB;AAIA,QAAMI,iBAAiB,GAAGV,OAAO,CAACG,MAAR,CAAe,CAACC,GAAD,EAAMC,GAAN,KAAc;AACrD,QAAIA,GAAG,GAAG,CAAN,KAAY,CAAhB,EAAmB;AACjB,aAAOD,GAAG,CAACO,IAAX;AACD;AACF,GAJyB,CAA1B;AAMA,QAAMC,QAAQ,GAAGF,iBAAiB,CAACF,GAAlB,CAAsBC,IAAI,IAAI;AAC7C,WAAOA,IAAI,CAACE,IAAZ;AACD,GAFgB,CAAjB;AAIA,QAAME,SAAS,GAAG;AAChBC,IAAAA,MAAM,EAAEF,QADQ;AAEhBG,IAAAA,QAAQ,EAAE,CACR;AACEC,MAAAA,KAAK,EAAE,sBADT;AAEEC,MAAAA,IAAI,EAAEV,YAFR;AAGEW,MAAAA,eAAe,EAAE,CACf,yBADe,EAEf,yBAFe,EAGf,yBAHe,EAIf,yBAJe,CAHnB;AASEC,MAAAA,WAAW,EAAE;AATf,KADQ;AAFM,GAAlB;AAiBA,sBACE;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAEN,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAMD,CAhDD;;AAkDA,eAAef,UAAf","sourcesContent":["// import React from 'react';\nimport React from 'react';\nimport './ChartGraph.css';\nimport { Line } from 'react-chartjs-2';\n\n// Think about putting the object in the return and using hooks\n// to update the particular data we want to update\n\nconst ChartGraph = props => {\n  const dataApi = props.resp;\n\n  // console.log(dataApi);\n\n  const posChartFilter = dataApi.filter((pst, idx) => {\n    if (idx % 5 === 0) {\n      return pst.positive;\n    }\n  });\n\n  const posChartData = posChartFilter.map(filt => {\n    return filt.positive;\n  });\n\n  const posChartFiltDates = dataApi.filter((pst, idx) => {\n    if (idx % 5 === 0) {\n      return pst.date;\n    }\n  });\n\n  const posDates = posChartFiltDates.map(filt => {\n    return filt.date;\n  });\n\n  const chartData = {\n    labels: posDates,\n    datasets: [\n      {\n        label: 'Positive Cases in Us',\n        data: posChartData,\n        backgroundColor: [\n          'rgba(255, 99, 132, 0.6)',\n          'rgba(54, 162, 235, 0.6)',\n          'rgba(255, 206, 86, 0.6)',\n          'rgba(75, 192, 192, 0.6)'\n        ],\n        borderWidth: 3\n      }\n    ]\n  };\n\n  return (\n    <div className=\"charts-container\">\n      <Line data={chartData} />\n      {/* <Line /> */}\n    </div>\n  );\n};\n\nexport default ChartGraph;\n"]},"metadata":{},"sourceType":"module"}