{"ast":null,"code":"var _jsxFileName = \"/Users/chrisbrown/Desktop/react-covid-19/React-Covid-Tracker/src/ChartGraph.js\";\n// import React from 'react';\nimport React, { useState, useEffect } from 'react';\nimport { Line } from 'react-chartjs-2';\n\nconst ChartGraph = props => {\n  const dataApi = props.resp;\n  const [posChartData, setPosDataChart] = useState({}); // const [dataTr, setDataTr] = useState([]);\n  // const posChart = dataApi.filter((t, idx) => {\n  //   if (idx % 20 === 0) {\n  //     const retPos = t.positive;\n  //     return retPos;\n  //   }\n  // });\n\n  let accum = [];\n  dataApi.forEach((t, idx) => {\n    if (idx % 20 === 0) {\n      accum.push(t.positive);\n    }\n  });\n  console.log(accum);\n  useEffect(() => {\n    const chart = () => {\n      setPosDataChart({\n        labels: ['12', '13', '24', '76', '54', '54', '54', '53', '43', '54'],\n        // data: {\n        datasets: [{\n          label: 'Positive Cases in Us',\n          // data: [1, 2, 39, 78, 55, 21],\n          data: accum,\n          backgroundColor: ['rgba(34,0,65,0.5)']\n        }, {\n          label: 'Positive Cases in France',\n          // data: [3, 4, 5, 9, 7, 76],\n          backgroundColor: ['rgba(34,65,65,0.5)']\n        }]\n      });\n    };\n\n    chart();\n  }, []); // console.log(chartHosp);\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, \" testing Charts\"), /*#__PURE__*/React.createElement(Line, {\n    data: posChartData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default ChartGraph;","map":{"version":3,"sources":["/Users/chrisbrown/Desktop/react-covid-19/React-Covid-Tracker/src/ChartGraph.js"],"names":["React","useState","useEffect","Line","ChartGraph","props","dataApi","resp","posChartData","setPosDataChart","accum","forEach","t","idx","push","positive","console","log","chart","labels","datasets","label","data","backgroundColor"],"mappings":";AAAA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,iBAArB;;AAEA,MAAMC,UAAU,GAAGC,KAAK,IAAI;AAC1B,QAAMC,OAAO,GAAGD,KAAK,CAACE,IAAtB;AACA,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCR,QAAQ,CAAC,EAAD,CAAhD,CAF0B,CAG1B;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAIS,KAAK,GAAG,EAAZ;AACAJ,EAAAA,OAAO,CAACK,OAAR,CAAgB,CAACC,CAAD,EAAIC,GAAJ,KAAY;AAC1B,QAAIA,GAAG,GAAG,EAAN,KAAa,CAAjB,EAAoB;AAClBH,MAAAA,KAAK,CAACI,IAAN,CAAWF,CAAC,CAACG,QAAb;AACD;AACF,GAJD;AAKAC,EAAAA,OAAO,CAACC,GAAR,CAAYP,KAAZ;AAEAR,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMgB,KAAK,GAAG,MAAM;AAClBT,MAAAA,eAAe,CAAC;AACdU,QAAAA,MAAM,EAAE,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB,IAAzB,EAA+B,IAA/B,EAAqC,IAArC,EAA2C,IAA3C,EAAiD,IAAjD,EAAuD,IAAvD,CADM;AAEd;AACAC,QAAAA,QAAQ,EAAE,CACR;AACEC,UAAAA,KAAK,EAAE,sBADT;AAEE;AAEAC,UAAAA,IAAI,EAAEZ,KAJR;AAKEa,UAAAA,eAAe,EAAE,CAAC,mBAAD;AALnB,SADQ,EAQR;AACEF,UAAAA,KAAK,EAAE,0BADT;AAEE;AACAE,UAAAA,eAAe,EAAE,CAAC,oBAAD;AAHnB,SARQ;AAHI,OAAD,CAAf;AAkBD,KAnBD;;AAqBAL,IAAAA,KAAK;AACN,GAvBQ,EAuBN,EAvBM,CAAT,CApB0B,CA6C1B;;AAEA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,eAEE,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAEV,YAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAOD,CAtDD;;AAwDA,eAAeJ,UAAf","sourcesContent":["// import React from 'react';\nimport React, { useState, useEffect } from 'react';\nimport { Line } from 'react-chartjs-2';\n\nconst ChartGraph = props => {\n  const dataApi = props.resp;\n  const [posChartData, setPosDataChart] = useState({});\n  // const [dataTr, setDataTr] = useState([]);\n\n  // const posChart = dataApi.filter((t, idx) => {\n  //   if (idx % 20 === 0) {\n  //     const retPos = t.positive;\n  //     return retPos;\n  //   }\n  // });\n\n  let accum = [];\n  dataApi.forEach((t, idx) => {\n    if (idx % 20 === 0) {\n      accum.push(t.positive);\n    }\n  });\n  console.log(accum);\n\n  useEffect(() => {\n    const chart = () => {\n      setPosDataChart({\n        labels: ['12', '13', '24', '76', '54', '54', '54', '53', '43', '54'],\n        // data: {\n        datasets: [\n          {\n            label: 'Positive Cases in Us',\n            // data: [1, 2, 39, 78, 55, 21],\n\n            data: accum,\n            backgroundColor: ['rgba(34,0,65,0.5)']\n          },\n          {\n            label: 'Positive Cases in France',\n            // data: [3, 4, 5, 9, 7, 76],\n            backgroundColor: ['rgba(34,65,65,0.5)']\n          }\n        ]\n      });\n    };\n\n    chart();\n  }, []);\n\n  // console.log(chartHosp);\n\n  return (\n    <div>\n      <h1> testing Charts</h1>\n      <Line data={posChartData} />\n      {/* <Line /> */}\n    </div>\n  );\n};\n\nexport default ChartGraph;\n"]},"metadata":{},"sourceType":"module"}